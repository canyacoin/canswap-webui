{
  "contractName": "ERC20DetailedMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "initialBalance",
          "type": "uint256"
        },
        {
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000bcf38038062000bcf833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020808301516040840151606090940151875193965090945091869186918691620000fe9160039186019062000272565b5081516200011490600490602085019062000272565b506005805460ff191660ff929092169190911790555062000141905081836401000000006200014c810204565b505050505062000317565b600160a060020a03821615156200016257600080fd5b6002546200017f9082640100000000620007ae6200020b82021704565b600255600160a060020a038216600090815260208190526040902054620001b59082640100000000620007ae6200020b82021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062000bad6022913960400191505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002b557805160ff1916838001178555620002e5565b82800160010185558215620002e5579182015b82811115620002e5578251825591602001919060010190620002c8565b50620002f3929150620002f7565b5090565b6200031491905b80821115620002f35760008155600101620002fe565b90565b61088680620003276000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e57806339509351146101f657806370a082311461022257806395d89b4114610248578063a457c2d714610250578063a9059cbb1461027c578063dd62ed3e146102a8576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018857806323b872dd146101a2578063313ce567146101d8575b600080fd5b6100d36102d6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561036c565b604080519115158252519081900360200190f35b61019061044c565b60408051918252519081900360200190f35b610174600480360360608110156101b857600080fd5b50600160a060020a03813581169160208101359091169060400135610452565b6101e06104bf565b6040805160ff9092168252519081900360200190f35b6101746004803603604081101561020c57600080fd5b50600160a060020a0381351690602001356104c8565b6101906004803603602081101561023857600080fd5b5035600160a060020a0316610578565b6100d3610593565b6101746004803603604081101561026657600080fd5b50600160a060020a0381351690602001356105f4565b6101746004803603604081101561029257600080fd5b50600160a060020a03813516906020013561063f565b610190600480360360408110156102be57600080fd5b50600160a060020a0381358116916020013516610655565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b6000600160a060020a03831615156103e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5370656e6465722063616e6e6f7420626520656d707479206164647265737300604482015290519081900360640190fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610486908363ffffffff61068016565b600160a060020a03851660009081526001602090815260408083203384529091529020556104b58484846106e1565b5060019392505050565b60055460ff1690565b6000600160a060020a03831615156104df57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610513908363ffffffff6107ae16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b6000600160a060020a038316151561060b57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610513908363ffffffff61068016565b600061064c3384846106e1565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806108366025913960400191505060405180910390fd5b50900390565b600160a060020a03821615156106f657600080fd5b600160a060020a03831660009081526020819052604090205461071f908263ffffffff61068016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610754908263ffffffff6107ae16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561080c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806108146022913960400191505060405180910390fd5b939250505056fe526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c6f77526573756c74206f66207375627472616374696f6e2063616e6e6f74206f766572666c6f77a165627a7a72305820900c53a71b36b7bb1b241a001fdba21462751d77b668da6e8368e76b8af397690029526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c6f77",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e57806339509351146101f657806370a082311461022257806395d89b4114610248578063a457c2d714610250578063a9059cbb1461027c578063dd62ed3e146102a8576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018857806323b872dd146101a2578063313ce567146101d8575b600080fd5b6100d36102d6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561036c565b604080519115158252519081900360200190f35b61019061044c565b60408051918252519081900360200190f35b610174600480360360608110156101b857600080fd5b50600160a060020a03813581169160208101359091169060400135610452565b6101e06104bf565b6040805160ff9092168252519081900360200190f35b6101746004803603604081101561020c57600080fd5b50600160a060020a0381351690602001356104c8565b6101906004803603602081101561023857600080fd5b5035600160a060020a0316610578565b6100d3610593565b6101746004803603604081101561026657600080fd5b50600160a060020a0381351690602001356105f4565b6101746004803603604081101561029257600080fd5b50600160a060020a03813516906020013561063f565b610190600480360360408110156102be57600080fd5b50600160a060020a0381358116916020013516610655565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b6000600160a060020a03831615156103e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5370656e6465722063616e6e6f7420626520656d707479206164647265737300604482015290519081900360640190fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610486908363ffffffff61068016565b600160a060020a03851660009081526001602090815260408083203384529091529020556104b58484846106e1565b5060019392505050565b60055460ff1690565b6000600160a060020a03831615156104df57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610513908363ffffffff6107ae16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b6000600160a060020a038316151561060b57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610513908363ffffffff61068016565b600061064c3384846106e1565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806108366025913960400191505060405180910390fd5b50900390565b600160a060020a03821615156106f657600080fd5b600160a060020a03831660009081526020819052604090205461071f908263ffffffff61068016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610754908263ffffffff6107ae16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561080c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806108146022913960400191505060405180910390fd5b939250505056fe526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c6f77526573756c74206f66207375627472616374696f6e2063616e6e6f74206f766572666c6f77a165627a7a72305820900c53a71b36b7bb1b241a001fdba21462751d77b668da6e8368e76b8af397690029",
  "sourceMap": "48:278:9:-;;;105:219;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:219:9;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;105:219:9;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;105:219:9;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;105:219:9;;;;;;;;;;;;;;7505:12:8;;105:219:9;;-1:-1:-1;105:219:9;;-1:-1:-1;105:219:9;241:4;;105:219;;;;7505:12:8;;:5;;:12;;;;:::i;:::-;-1:-1:-1;7527:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;7553:9:8;:20;;-1:-1:-1;;7553:20:8;;;;;;;;;;;;-1:-1:-1;282:35:9;;-1:-1:-1;288:12:9;302:14;282:5;;;;:35;:::i;:::-;105:219;;;;;48:278;;5636:263:8;-1:-1:-1;;;;;5710:21:8;;;;5702:30;;;;;;5758:12;;:23;;5775:5;5758:16;;;;;;:23;:::i;:::-;5743:12;:38;-1:-1:-1;;;;;5812:18:8;;:9;:18;;;;;;;;;;;:29;;5835:5;5812:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;5791:18:8;;:9;:18;;;;;;;;;;;:50;;;;5856:36;;;;;;;5791:18;;:9;;5856:36;;;;;;;;;;5636:263;;:::o;1489:183:6:-;1547:7;1578:5;;;1601:6;;;;1593:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:1;1489:183;-1:-1:-1;;;1489:183:6:o;48:278:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;48:278:9;;;-1:-1:-1;48:278:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "48:278:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:278:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7640:81:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7640:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:273;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2448:273:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;649:89;;;:::i;:::-;;;;;;;;;;;;;;;;3007:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3007:225:8;;;;;;;;;;;;;;;;;:::i;7942:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3703:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3703:317:8;;;;;;;;:::i;947:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;947:104:8;-1:-1:-1;;;;;947:104:8;;:::i;7783:85::-;;;:::i;4496:327::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:327:8;;;;;;;;:::i;1675:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1675:137:8;;;;;;;;:::i;1382:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1382:129:8;;;;;;;;;;:::i;7640:81::-;7709:5;7702:12;;;;;;;;-1:-1:-1;;7702:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7677:13;;7702:12;;7709:5;;7702:12;;7709:5;7702:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7640:81;:::o;2448:273::-;2513:4;-1:-1:-1;;;;;2537:21:8;;;;2529:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:10;2605:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2605:29:8;;;;;;;;;;;;:37;;;2657:36;;;;;;;2605:29;;2614:10;2657:36;;;;;;;;;;;-1:-1:-1;2710:4:8;2448:273;;;;:::o;649:89::-;719:12;;649:89;:::o;3007:225::-;-1:-1:-1;;;;;3131:14:8;;3086:4;3131:14;;;:8;:14;;;;;;;;3146:10;3131:26;;;;;;;;:37;;3162:5;3131:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3102:14:8;;;;;;:8;:14;;;;;;;;3117:10;3102:26;;;;;;;:66;3178:26;3111:4;3194:2;3198:5;3178:9;:26::i;:::-;-1:-1:-1;3221:4:8;3007:225;;;;;:::o;7942:81::-;8007:9;;;;7942:81;:::o;3703:317::-;3783:4;-1:-1:-1;;;;;3807:21:8;;;;3799:30;;;;;;3881:10;3872:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3872:29:8;;;;;;;;;;:45;;3906:10;3872:45;:33;:45;:::i;:::-;3849:10;3840:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3840:29:8;;;;;;;;;;;;:77;;;3932:60;;;;;;3840:29;;3932:60;;;;;;;;;;;-1:-1:-1;4009:4:8;3703:317;;;;:::o;947:104::-;-1:-1:-1;;;;;1028:16:8;1002:7;1028:16;;;;;;;;;;;;947:104::o;7783:85::-;7854:7;7847:14;;;;;;;;-1:-1:-1;;7847:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7822:13;;7847:14;;7854:7;;7847:14;;7854:7;7847:14;;;;;;;;;;;;;;;;;;;;;;;;4496:327;4581:4;-1:-1:-1;;;;;4605:21:8;;;;4597:30;;;;;;4679:10;4670:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4670:29:8;;;;;;;;;;:50;;4704:15;4670:50;:33;:50;:::i;1675:137::-;1736:4;1752:32;1762:10;1774:2;1778:5;1752:9;:32::i;:::-;-1:-1:-1;1801:4:8;1675:137;;;;:::o;1382:129::-;-1:-1:-1;;;;;1480:15:8;;;1454:7;1480:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1382:129::o;1232:186:6:-;1290:7;1317:6;;;;1309:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1387:5:6;;;1232:186::o;5037:256:8:-;-1:-1:-1;;;;;5124:16:8;;;;5116:25;;;;;;-1:-1:-1;;;;;5170:15:8;;:9;:15;;;;;;;;;;;:26;;5190:5;5170:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5152:15:8;;;:9;:15;;;;;;;;;;;:44;;;;5222:13;;;;;;;:24;;5240:5;5222:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5206:13:8;;;:9;:13;;;;;;;;;;;;:40;;;;5261:25;;;;;;;5206:13;;5261:25;;;;;;;;;;;;;5037:256;;;:::o;1489:183:6:-;1547:7;1578:5;;;1601:6;;;;1593:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:1;1489:183;-1:-1:-1;;;1489:183:6:o",
  "source": "pragma solidity ^0.5.1;\n\nimport \"./ERC20.sol\";\n\ncontract ERC20DetailedMock is ERC20, ERC20Detailed {\n    constructor (string memory name, string memory symbol, uint8 decimals, uint256 initialBalance, address initialOwner) \n    ERC20Detailed(name, symbol, decimals) public {\n        _mint(initialOwner, initialBalance);\n    }\n}\n",
  "sourcePath": "/home/alex/projects/canya/canswap/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
  "ast": {
    "absolutePath": "/home/alex/projects/canya/canswap/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
    "exportedSymbols": {
      "ERC20DetailedMock": [
        3627
      ]
    },
    "id": 3628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3597,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/home/alex/projects/canya/canswap/canswap-contracts/contracts/mocks/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3598,
        "nodeType": "ImportDirective",
        "scope": 3628,
        "sourceUnit": 3596,
        "src": "25:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3599,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3540,
              "src": "78:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3540",
                "typeString": "contract ERC20"
              }
            },
            "id": 3600,
            "nodeType": "InheritanceSpecifier",
            "src": "78:5:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3601,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3595,
              "src": "85:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3595",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3602,
            "nodeType": "InheritanceSpecifier",
            "src": "85:13:9"
          }
        ],
        "contractDependencies": [
          2711,
          3540,
          3595
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3627,
        "linearizedBaseContracts": [
          3627,
          3595,
          3540,
          2711
        ],
        "name": "ERC20DetailedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3625,
              "nodeType": "Block",
              "src": "272:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3621,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "288:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3622,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "302:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3620,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3467,
                      "src": "282:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3624,
                  "nodeType": "ExpressionStatement",
                  "src": "282:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 3626,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3615,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3604,
                    "src": "241:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3616,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3606,
                    "src": "247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3617,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3608,
                    "src": "255:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3618,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3614,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3595,
                  "src": "227:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3595_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "227:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3604,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "118:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3606,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "138:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3608,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "160:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3607,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3610,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "176:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3612,
                  "name": "initialOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "200:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:104:9"
            },
            "returnParameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:9"
            },
            "scope": 3627,
            "src": "105:219:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3628,
        "src": "48:278:9"
      }
    ],
    "src": "0:327:9"
  },
  "legacyAST": {
    "absolutePath": "/home/alex/projects/canya/canswap/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
    "exportedSymbols": {
      "ERC20DetailedMock": [
        3627
      ]
    },
    "id": 3628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3597,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/home/alex/projects/canya/canswap/canswap-contracts/contracts/mocks/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3598,
        "nodeType": "ImportDirective",
        "scope": 3628,
        "sourceUnit": 3596,
        "src": "25:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3599,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3540,
              "src": "78:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3540",
                "typeString": "contract ERC20"
              }
            },
            "id": 3600,
            "nodeType": "InheritanceSpecifier",
            "src": "78:5:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3601,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3595,
              "src": "85:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3595",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3602,
            "nodeType": "InheritanceSpecifier",
            "src": "85:13:9"
          }
        ],
        "contractDependencies": [
          2711,
          3540,
          3595
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3627,
        "linearizedBaseContracts": [
          3627,
          3595,
          3540,
          2711
        ],
        "name": "ERC20DetailedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3625,
              "nodeType": "Block",
              "src": "272:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3621,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "288:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3622,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "302:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3620,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3467,
                      "src": "282:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3624,
                  "nodeType": "ExpressionStatement",
                  "src": "282:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 3626,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3615,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3604,
                    "src": "241:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3616,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3606,
                    "src": "247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3617,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3608,
                    "src": "255:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3618,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3614,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3595,
                  "src": "227:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3595_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "227:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3604,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "118:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3606,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "138:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3608,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "160:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3607,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3610,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "176:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3612,
                  "name": "initialOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3626,
                  "src": "200:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:104:9"
            },
            "returnParameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:9"
            },
            "scope": 3627,
            "src": "105:219:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3628,
        "src": "48:278:9"
      }
    ],
    "src": "0:327:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-06T05:40:37.514Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}