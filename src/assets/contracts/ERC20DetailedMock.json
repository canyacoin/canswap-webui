{
  "contractName": "ERC20DetailedMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "initialBalance",
          "type": "uint256"
        },
        {
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000c8a38038062000c8a833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020808301516040840151606090940151875193965090945091869186918691620000fe91600391860190620002ad565b50815162000114906004906020850190620002ad565b506005805460ff191660ff929092169190911790555062000141905081836401000000006200014c810204565b505050505062000352565b600160a060020a03821615156200016257600080fd5b6002546200017f90826401000000006200085b6200020b82021704565b600255600160a060020a038216600090815260208190526040902054620001b590826401000000006200085b6200020b82021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600082820183811015620002a657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c60448201527f6f77000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f057805160ff191683800117855562000320565b8280016001018555821562000320579182015b828111156200032057825182559160200191906001019062000303565b506200032e92915062000332565b5090565b6200034f91905b808211156200032e576000815560010162000339565b90565b61092880620003626000396000f3fe6080604052600436106100a8577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100ad578063095ea7b31461013757806318160ddd1461018457806323b872dd146101ab578063313ce567146101ee578063395093511461021957806370a082311461025257806395d89b4114610285578063a457c2d71461029a578063a9059cbb146102d3578063dd62ed3e1461030c575b600080fd5b3480156100b957600080fd5b506100c2610347565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fc5781810151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014357600080fd5b506101706004803603604081101561015a57600080fd5b50600160a060020a0381351690602001356103dd565b604080519115158252519081900360200190f35b34801561019057600080fd5b506101996104bd565b60408051918252519081900360200190f35b3480156101b757600080fd5b50610170600480360360608110156101ce57600080fd5b50600160a060020a038135811691602081013590911690604001356104c3565b3480156101fa57600080fd5b50610203610530565b6040805160ff9092168252519081900360200190f35b34801561022557600080fd5b506101706004803603604081101561023c57600080fd5b50600160a060020a038135169060200135610539565b34801561025e57600080fd5b506101996004803603602081101561027557600080fd5b5035600160a060020a03166105e9565b34801561029157600080fd5b506100c2610604565b3480156102a657600080fd5b50610170600480360360408110156102bd57600080fd5b50600160a060020a038135169060200135610665565b3480156102df57600080fd5b50610170600480360360408110156102f657600080fd5b50600160a060020a0381351690602001356106b0565b34801561031857600080fd5b506101996004803603604081101561032f57600080fd5b50600160a060020a03813581169160200135166106c6565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000600160a060020a038316151561045657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5370656e6465722063616e6e6f7420626520656d707479206164647265737300604482015290519081900360640190fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546104f7908363ffffffff6106f116565b600160a060020a038516600090815260016020908152604080832033845290915290205561052684848461078e565b5060019392505050565b60055460ff1690565b6000600160a060020a038316151561055057600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610584908363ffffffff61085b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b6000600160a060020a038316151561067c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610584908363ffffffff6106f116565b60006106bd33848461078e565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561078857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f526573756c74206f66207375627472616374696f6e2063616e6e6f74206f766560448201527f72666c6f77000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50900390565b600160a060020a03821615156107a357600080fd5b600160a060020a0383166000908152602081905260409020546107cc908263ffffffff6106f116565b600160a060020a038085166000908152602081905260408082209390935590841681522054610801908263ffffffff61085b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156108f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c60448201527f6f77000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b939250505056fea165627a7a72305820c82f8249a824988c6b0f1d82ad6940df71f0e8ac4d535f03dfc7f46e88d01eb40029",
  "deployedBytecode": "0x6080604052600436106100a8577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100ad578063095ea7b31461013757806318160ddd1461018457806323b872dd146101ab578063313ce567146101ee578063395093511461021957806370a082311461025257806395d89b4114610285578063a457c2d71461029a578063a9059cbb146102d3578063dd62ed3e1461030c575b600080fd5b3480156100b957600080fd5b506100c2610347565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fc5781810151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014357600080fd5b506101706004803603604081101561015a57600080fd5b50600160a060020a0381351690602001356103dd565b604080519115158252519081900360200190f35b34801561019057600080fd5b506101996104bd565b60408051918252519081900360200190f35b3480156101b757600080fd5b50610170600480360360608110156101ce57600080fd5b50600160a060020a038135811691602081013590911690604001356104c3565b3480156101fa57600080fd5b50610203610530565b6040805160ff9092168252519081900360200190f35b34801561022557600080fd5b506101706004803603604081101561023c57600080fd5b50600160a060020a038135169060200135610539565b34801561025e57600080fd5b506101996004803603602081101561027557600080fd5b5035600160a060020a03166105e9565b34801561029157600080fd5b506100c2610604565b3480156102a657600080fd5b50610170600480360360408110156102bd57600080fd5b50600160a060020a038135169060200135610665565b3480156102df57600080fd5b50610170600480360360408110156102f657600080fd5b50600160a060020a0381351690602001356106b0565b34801561031857600080fd5b506101996004803603604081101561032f57600080fd5b50600160a060020a03813581169160200135166106c6565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000600160a060020a038316151561045657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5370656e6465722063616e6e6f7420626520656d707479206164647265737300604482015290519081900360640190fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546104f7908363ffffffff6106f116565b600160a060020a038516600090815260016020908152604080832033845290915290205561052684848461078e565b5060019392505050565b60055460ff1690565b6000600160a060020a038316151561055057600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610584908363ffffffff61085b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b6000600160a060020a038316151561067c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610584908363ffffffff6106f116565b60006106bd33848461078e565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561078857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f526573756c74206f66207375627472616374696f6e2063616e6e6f74206f766560448201527f72666c6f77000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50900390565b600160a060020a03821615156107a357600080fd5b600160a060020a0383166000908152602081905260409020546107cc908263ffffffff6106f116565b600160a060020a038085166000908152602081905260408082209390935590841681522054610801908263ffffffff61085b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156108f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f526573756c74206f66206164646974696f6e2063616e6e6f74206f766572666c60448201527f6f77000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b939250505056fea165627a7a72305820c82f8249a824988c6b0f1d82ad6940df71f0e8ac4d535f03dfc7f46e88d01eb40029",
  "sourceMap": "47:278:9:-;;;104:219;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:219:9;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;104:219:9;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;104:219:9;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;104:219:9;;;;;;;;;;;;;;7504:12:8;;104:219:9;;-1:-1:-1;104:219:9;;-1:-1:-1;104:219:9;240:4;;104:219;;;;7504:12:8;;:5;;:12;;;;:::i;:::-;-1:-1:-1;7526:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;7552:9:8;:20;;-1:-1:-1;;7552:20:8;;;;;;;;;;;;-1:-1:-1;281:35:9;;-1:-1:-1;287:12:9;301:14;281:5;;;;:35;:::i;:::-;104:219;;;;;47:278;;5635:263:8;-1:-1:-1;;;;;5709:21:8;;;;5701:30;;;;;;5757:12;;:23;;5774:5;5757:16;;;;;;:23;:::i;:::-;5742:12;:38;-1:-1:-1;;;;;5811:18:8;;:9;:18;;;;;;;;;;;:29;;5834:5;5811:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;5790:18:8;;:9;:18;;;;;;;;;;;:50;;;;5855:36;;;;;;;5790:18;;:9;;5855:36;;;;;;;;;;5635:263;;:::o;1488:183:6:-;1546:7;1577:5;;;1600:6;;;;1592:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:1;1488:183;-1:-1:-1;;;1488:183:6:o;47:278:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47:278:9;;;-1:-1:-1;47:278:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "47:278:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:81:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7639:81:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7639:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:273;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2447:273:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2447:273:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;648:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;648:89:8;;;:::i;:::-;;;;;;;;;;;;;;;;3006:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3006:225:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3006:225:8;;;;;;;;;;;;;;;;;:::i;7941:81::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7941:81:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3702:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3702:317:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:317:8;;;;;;;;:::i;946:104::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:104:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;946:104:8;-1:-1:-1;;;;;946:104:8;;:::i;7782:85::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7782:85:8;;;:::i;4495:327::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4495:327:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4495:327:8;;;;;;;;:::i;1674:137::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:137:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1674:137:8;;;;;;;;:::i;1381:129::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1381:129:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1381:129:8;;;;;;;;;;:::i;7639:81::-;7708:5;7701:12;;;;;;;;-1:-1:-1;;7701:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7676:13;;7701:12;;7708:5;;7701:12;;7708:5;7701:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:81;:::o;2447:273::-;2512:4;-1:-1:-1;;;;;2536:21:8;;;;2528:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2613:10;2604:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2604:29:8;;;;;;;;;;;;:37;;;2656:36;;;;;;;2604:29;;2613:10;2656:36;;;;;;;;;;;-1:-1:-1;2709:4:8;2447:273;;;;:::o;648:89::-;718:12;;648:89;:::o;3006:225::-;-1:-1:-1;;;;;3130:14:8;;3085:4;3130:14;;;:8;:14;;;;;;;;3145:10;3130:26;;;;;;;;:37;;3161:5;3130:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3101:14:8;;;;;;:8;:14;;;;;;;;3116:10;3101:26;;;;;;;:66;3177:26;3110:4;3193:2;3197:5;3177:9;:26::i;:::-;-1:-1:-1;3220:4:8;3006:225;;;;;:::o;7941:81::-;8006:9;;;;7941:81;:::o;3702:317::-;3782:4;-1:-1:-1;;;;;3806:21:8;;;;3798:30;;;;;;3880:10;3871:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3871:29:8;;;;;;;;;;:45;;3905:10;3871:45;:33;:45;:::i;:::-;3848:10;3839:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3839:29:8;;;;;;;;;;;;:77;;;3931:60;;;;;;3839:29;;3931:60;;;;;;;;;;;-1:-1:-1;4008:4:8;3702:317;;;;:::o;946:104::-;-1:-1:-1;;;;;1027:16:8;1001:7;1027:16;;;;;;;;;;;;946:104::o;7782:85::-;7853:7;7846:14;;;;;;;;-1:-1:-1;;7846:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7821:13;;7846:14;;7853:7;;7846:14;;7853:7;7846:14;;;;;;;;;;;;;;;;;;;;;;;;4495:327;4580:4;-1:-1:-1;;;;;4604:21:8;;;;4596:30;;;;;;4678:10;4669:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4669:29:8;;;;;;;;;;:50;;4703:15;4669:50;:33;:50;:::i;1674:137::-;1735:4;1751:32;1761:10;1773:2;1777:5;1751:9;:32::i;:::-;-1:-1:-1;1800:4:8;1674:137;;;;:::o;1381:129::-;-1:-1:-1;;;;;1479:15:8;;;1453:7;1479:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1381:129::o;1231:186:6:-;1289:7;1316:6;;;;1308:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1386:5:6;;;1231:186::o;5036:256:8:-;-1:-1:-1;;;;;5123:16:8;;;;5115:25;;;;;;-1:-1:-1;;;;;5169:15:8;;:9;:15;;;;;;;;;;;:26;;5189:5;5169:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5151:15:8;;;:9;:15;;;;;;;;;;;:44;;;;5221:13;;;;;;;:24;;5239:5;5221:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5205:13:8;;;:9;:13;;;;;;;;;;;;:40;;;;5260:25;;;;;;;5205:13;;5260:25;;;;;;;;;;;;;5036:256;;;:::o;1488:183:6:-;1546:7;1577:5;;;1600:6;;;;1592:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:1;1488:183;-1:-1:-1;;;1488:183:6:o",
  "source": "pragma solidity 0.5.1;\n\nimport \"./ERC20.sol\";\n\ncontract ERC20DetailedMock is ERC20, ERC20Detailed {\n    constructor (string memory name, string memory symbol, uint8 decimals, uint256 initialBalance, address initialOwner) \n    ERC20Detailed(name, symbol, decimals) public {\n        _mint(initialOwner, initialBalance);\n    }\n}\n",
  "sourcePath": "/home/alex/projects/canya/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
  "ast": {
    "absolutePath": "/home/alex/projects/canya/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
    "exportedSymbols": {
      "ERC20DetailedMock": [
        3440
      ]
    },
    "id": 3441,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3410,
        "literals": [
          "solidity",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:9"
      },
      {
        "absolutePath": "/home/alex/projects/canya/canswap-contracts/contracts/mocks/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3411,
        "nodeType": "ImportDirective",
        "scope": 3441,
        "sourceUnit": 3409,
        "src": "24:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3412,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3353,
              "src": "77:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3353",
                "typeString": "contract ERC20"
              }
            },
            "id": 3413,
            "nodeType": "InheritanceSpecifier",
            "src": "77:5:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3414,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3408,
              "src": "84:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3408",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3415,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:9"
          }
        ],
        "contractDependencies": [
          2524,
          3353,
          3408
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3440,
        "linearizedBaseContracts": [
          3440,
          3408,
          3353,
          2524
        ],
        "name": "ERC20DetailedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3438,
              "nodeType": "Block",
              "src": "271:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3434,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "287:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3435,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3423,
                        "src": "301:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3433,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3280,
                      "src": "281:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "281:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3437,
                  "nodeType": "ExpressionStatement",
                  "src": "281:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 3439,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3428,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3417,
                    "src": "240:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3429,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3419,
                    "src": "246:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3430,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3421,
                    "src": "254:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3431,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3427,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "226:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3408_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "226:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3417,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "117:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "117:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "137:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3421,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "159:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3420,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3423,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "175:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "name": "initialOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "199:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "116:104:9"
            },
            "returnParameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:9"
            },
            "scope": 3440,
            "src": "104:219:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3441,
        "src": "47:278:9"
      }
    ],
    "src": "0:326:9"
  },
  "legacyAST": {
    "absolutePath": "/home/alex/projects/canya/canswap-contracts/contracts/mocks/ERC20DetailedMock.sol",
    "exportedSymbols": {
      "ERC20DetailedMock": [
        3440
      ]
    },
    "id": 3441,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3410,
        "literals": [
          "solidity",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:9"
      },
      {
        "absolutePath": "/home/alex/projects/canya/canswap-contracts/contracts/mocks/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3411,
        "nodeType": "ImportDirective",
        "scope": 3441,
        "sourceUnit": 3409,
        "src": "24:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3412,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3353,
              "src": "77:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3353",
                "typeString": "contract ERC20"
              }
            },
            "id": 3413,
            "nodeType": "InheritanceSpecifier",
            "src": "77:5:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3414,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3408,
              "src": "84:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3408",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3415,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:9"
          }
        ],
        "contractDependencies": [
          2524,
          3353,
          3408
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3440,
        "linearizedBaseContracts": [
          3440,
          3408,
          3353,
          2524
        ],
        "name": "ERC20DetailedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3438,
              "nodeType": "Block",
              "src": "271:52:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3434,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "287:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3435,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3423,
                        "src": "301:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3433,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3280,
                      "src": "281:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "281:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3437,
                  "nodeType": "ExpressionStatement",
                  "src": "281:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 3439,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3428,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3417,
                    "src": "240:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3429,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3419,
                    "src": "246:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3430,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3421,
                    "src": "254:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3431,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3427,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "226:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3408_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "226:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3417,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "117:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "117:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "137:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "137:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3421,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "159:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3420,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3423,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "175:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "name": "initialOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "199:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "116:104:9"
            },
            "returnParameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:9"
            },
            "scope": 3440,
            "src": "104:219:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3441,
        "src": "47:278:9"
      }
    ],
    "src": "0:326:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xD604070Bf31cBA2810424bfd0f8c37CBEdA5ce78",
      "transactionHash": "0x4821ed05505ef4a14ad927f23c9336f4a2376dedb3c92e0708ab6975b88156b9"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-18T06:31:40.241Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}